// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PlanetService.DataAccess;

#nullable disable

namespace PlanetService.DataAccess.Migrations
{
    [DbContext(typeof(PlanetContext))]
    partial class PlanetContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PlanetService.BusinessLogic.Models.Planet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Diameter")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Temperature")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Planets", (string)null);
                });

            modelBuilder.Entity("PlanetService.BusinessLogic.Models.PlanetConstruction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CatalogConstructionId")
                        .HasColumnType("uuid");

                    b.Property<int?>("Coefficient")
                        .HasColumnType("integer");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<Guid>("PlanetId")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlanetId");

                    b.ToTable("PlanetConstructions", (string)null);
                });

            modelBuilder.Entity("PlanetService.BusinessLogic.Models.PlanetMilitaryConstruction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<Guid>("MilitaryCatalogConstructionId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PlanetId")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlanetId");

                    b.ToTable("PlanetMilitaryConstructions", (string)null);
                });

            modelBuilder.Entity("PlanetService.BusinessLogic.Models.PlanetConstruction", b =>
                {
                    b.HasOne("PlanetService.BusinessLogic.Models.Planet", "Planet")
                        .WithMany("Constructions")
                        .HasForeignKey("PlanetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Planet");
                });

            modelBuilder.Entity("PlanetService.BusinessLogic.Models.PlanetMilitaryConstruction", b =>
                {
                    b.HasOne("PlanetService.BusinessLogic.Models.Planet", "Planet")
                        .WithMany("MilitaryConstructions")
                        .HasForeignKey("PlanetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Planet");
                });

            modelBuilder.Entity("PlanetService.BusinessLogic.Models.Planet", b =>
                {
                    b.Navigation("Constructions");

                    b.Navigation("MilitaryConstructions");
                });
#pragma warning restore 612, 618
        }
    }
}
